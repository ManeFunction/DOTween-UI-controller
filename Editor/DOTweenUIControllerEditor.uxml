<ui:UXML xmlns:ui="UnityEngine.UIElements" 
         editor-extension-mode="True">
    
    <Style src="DOTweenUIController.uss" />
    
    <ui:Template name="TweenDataControl" src="TweenDataControl.uxml" />
    
    <ui:VisualElement class="tween-block">
        <ui:Label text="Options:" class="header"/>
        <ui:Toggle binding-path="_autoplay" text="Autoplay" name="autoplayToggle" tooltip="Plays tweens automatically from the Start() of this component. Otherwise use Play() to invoke animations." />
        <ui:Toggle binding-path="_createOnStart" text="Create on Start" name="createOnStartToggle" tooltip="Pre-creates tweens on Start() for more smooth play on demand." />
        <ui:Toggle binding-path="_restartOnEnable" text="Restart on Enable" name="restartOnEnableToggle" tooltip="Restart tweens when Disable > Enable object or component. DO NOT enable w/o needs, as it's disable tween auto-kill feature." />
        <ui:Toggle binding-path="_pauseOnDisable" text="Pause on Disable" name="pauseOnDisableToggle" tooltip="Pause tweens on components Disable. Otherwise it keeps playing." />
        <ui:Toggle binding-path="_finishOnStop" text="Finish on Stop/Kill" tooltip="If Tweens will be Stop()'ed from the code, place values to the end positions. Finishing DO NOT work with looped tweens!" />
        <ui:Toggle binding-path="_unscaledTime" text="Unscaled Time" tooltip="Use unscaled delta time to prevent inconsistent behaviour or freezing when timeScale is changed." />
    </ui:VisualElement>
    
    <ui:Instance template="TweenDataControl" name="moveX" binding-path="_moveX" />
    <ui:Instance template="TweenDataControl" name="moveY" binding-path="_moveY" />
    <ui:Instance template="TweenDataControl" name="scaleX" binding-path="_scaleX" />
    <ui:Instance template="TweenDataControl" name="scaleY" binding-path="_scaleY" />
    <ui:Instance template="TweenDataControl" name="rotate" binding-path="_rotate" />
    <ui:Instance template="TweenDataControl" name="color" binding-path="_color" />
    <ui:Instance template="TweenDataControl" name="fade" binding-path="_fade" />
    
    <ui:Button name="replayButton" text="Re-Play" class="button" />
</ui:UXML>
